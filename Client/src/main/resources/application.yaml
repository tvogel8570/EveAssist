api-host: ${scheme}://localhost:${server.port}
ui-host: ${api-host}
rp-initiated-logout-enabled: true

pilot:
  client_id: ${esi.pilot.client.id}
  client_secret: ${esi.pilot.client.secret}
  redirect_uri: https://localhost:9443/pilot/login
  login_uri: https://login.eveonline.com/v2/oauth/authorize/
  response_type: code
  scope: esi-characters.read_notifications.v1 esi-killmails.read_killmails.v1 esi-skills.read_skills.v1 esi-skills.read_skillqueue.v1

scheme: http
keycloak-port: 8442
keycloak-realm: EveAssist
keycloak-issuer: ${scheme}://localhost:${keycloak-port}/realms/${keycloak-realm}

server:
  port: 7443
  ssl:
    enabled: false

spring:
  config:
    import: optional:classpath:env.properties
  datasource:
    username: postgres
    password: ${postgres.password}
    url: jdbc:postgresql://localhost:5432/eve_assist_user
  flyway:
    enabled: true
  jpa:
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
  thymeleaf:
    template-resolver-order: 0
  lifecycle:
    timeout-per-shutdown-phase: 30s
    jpa:
      open-in-view: false
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${keycloak-issuer}
        registration:
          keycloak-confidential-user:
            authorization-grant-type: authorization_code
            client-name: a local Keycloak instance
            client-id: ${keycloak.eveassist.id}
            client-secret: ${keycloak.eveassist.password}
            provider: keycloak
            scope: openid,profile,email,offline_access

authorities-mapping:
  issuers:
    - uri: ${keycloak-issuer}
      claims:
        - jsonPath: $.realm_access.roles
        - jsonPath: $.resource_access.*.roles

---
scheme: https
keycloak-port: 8443

server:
  port: 9443
  ssl:
    enabled: true
    key-store-type: PKCS12
    key-store: classpath:keystore/self_signed.p12
    key-store-password: ${self.signed.password}
    key-alias: ${hostname}

spring:
  config:
    activate:
      on-profile: ssl
